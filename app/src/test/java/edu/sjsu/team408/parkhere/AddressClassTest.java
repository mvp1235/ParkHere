package edu.sjsu.team408.parkhere;

import android.location.Location;

import com.google.android.gms.maps.model.LatLng;

import org.junit.Before;
import org.junit.Test;

import static junit.framework.Assert.assertEquals;

/**
 * Created by DuocNguyen on 11/9/17.
 */
public class AddressClassTest {
    private Address testAddress;
    @Before
    public void createAddress() {
        testAddress = new Address();
    }

    @Test
    public void testSetAndGetCity() {
        String city = "San Jose";
        testAddress.setCity(city);
        assertEquals(city, testAddress.getCity());
    }

    @Test
    public void testSetAndGetState() {
        String state = "California";
        testAddress.setState(state);
        assertEquals(state, testAddress.getState());
    }

    @Test
    public void testSetAndGetLatitudeAndLongitude() {
        double latitude = 37.348040;
        double longitude = -121.894169;
        testAddress.setLatitude(latitude);
        testAddress.setLongitude(longitude);
        assertEquals(latitude, testAddress.getLatitude());
        assertEquals(longitude, testAddress.getLongitude());
    }

    @Test
    public void testGetFullLatLngString() {
        double latitude = 37.348040;
        double longitude = -121.894169;
        testAddress.setLatitude(latitude);
        testAddress.setLongitude(longitude);
        assertEquals(latitude + ", " + longitude,
                testAddress.getFullLatLngString());
    }

    @Test
    public void testGetStreetAddress() {
        String streetAddress = "1 Washington Sq, San Jose, CA 95192";
        testAddress.setStreetAddress(streetAddress);
        assertEquals(streetAddress, testAddress.getStreetAddress());
    }


    /**
     * Test the formatAddress function in Address Class
     * Providing expectedAdress comparing with formatAddress function Address object
     */
    @Test
    public void formatAddressTest1() {
        String streetAddress = "2770 Bristol Dr";
        String city = "San Jose";
        String state = "CA";
        String zipCode = "95127";
        double latitude = 37.347750;
        double longitude = -121.822458;

        Address expectedAddress = new Address(streetAddress, city, state, zipCode, latitude, longitude);
        String expected = expectedAddress.toString();
        Address actualAddress = new Address();

        String fullStreetAddress = "2770 Bristol Dr, San Jose, CA 95127";
        LatLng point = new LatLng(latitude, longitude);
        actualAddress.formatAddress(fullStreetAddress, point);
        String actual = actualAddress.toString();
        assertEquals(expected, actual);
    }


    /**
     * Test the formatAdress function in Address class
     * Providing an empty Address object as expected value.
     * Comparing with empty Address object generated by formatAddress function.
     */
    @Test
    public void formatAddressTest2() {
        String streetAddress = "";
        String city = "";
        String state = "";
        String zipCode = "";
        double latitude = 0;
        double longitude = 0;
        //LatLng point = new LatLng(latitude, longitude);
        Address expectedAddress = new Address(streetAddress, city, state, zipCode, latitude, longitude);
        String expected = expectedAddress.toString();
        assertEquals(expected, "");
    }

    /**
     * Test toString method for correct format address
     */
    @Test
    public void toStringTest1() {
        String fullAddress = "2770 Bristol Dr, San Jose, CA 95127";
        LatLng point = new LatLng(37.347750, -121.822458);
        Address a = new Address(fullAddress, point);
        String expected = "2770 Bristol Dr, San Jose, CA 95127 37.34775 -121.822458";
        String actual = a.toString();
        assertEquals(expected, actual);
    }

    /**
     * Test toString method for correct format address
     * This should return empty string since there is an incorrect address
     */
    @Test
    public void toStringTest2() {
        String fullAddress = "2770 Bristol Dr, CA 95127";   //missing City
        Address a = new Address(fullAddress, null);
        String expected = "";
        String actual = a.toString();

        assertEquals(expected, actual);
    }
}